/* THEMING */

/* dark theme */

[data-theme="dark"] {
  --bg: rgb(20, 20, 25);
  --fg: rgb(230, 230, 230);
  --success: yellowgreen;
  --info: cadetblue;
  --warning: crimson;

  body {
    background-color: oklch(from var(--bg) l c h);
  }

  body, a, a[type="button"], button, input, select, textarea {
    color: oklch(from var(--fg) l c h)
  }

  header {
    background-color: oklch(from var(--fg) l c h / 0.125);
    border-bottom: 1px solid oklch(from var(--fg) l c h / 0.25);
  }

  a[type="button"], button, .alert, .search-result, input, select, textarea {
    border: 1px solid oklch(from var(--fg) l c h / 0.25);
    background-color: oklch(from var(--fg) l c h / 0.125);
    svg {
      fill: oklch(from var(--fg) l c h / 0.25);
    }

    &.success {
      border-color: oklch(from var(--success) l c h / 0.75);
      background-color: oklch(from var(--success) l c h / 0.25);
      svg {
        fill: oklch(from var(--success) l c h / 0.75);
      }
    }
  
    &.info {
      border-color: oklch(from var(--info) l c h / 0.75);
      background-color: oklch(from var(--info) l c h / 0.25);
      svg {
        fill: oklch(from var(--info) l c h / 0.75);
      }
    }
  
    &.warning {
      border-color: oklch(from var(--warning) l c h / 0.75);
      background-color: oklch(from var(--warning) l c h / 0.25);
      svg {
        fill: oklch(from var(--warning) l c h / 0.75);
      }
    }
  }

  a[type="button"]:hover, button:hover {
    border-color: oklch(from var(--fg) l c h / 0.5);
    background-color: oklch(from var(--fg) l c h / 0.25);
    svg {
      fill: oklch(from var(--fg) l c h / 0.5);
    }

    &.success {
      border-color: oklch(from var(--success) l c h / 1);
      background-color: oklch(from var(--success) l c h / 0.5);
      svg {
        fill: oklch(from var(--success) l c h / 1);
      }
    }
  
    &.info {
      border-color: oklch(from var(--info) l c h / 1);
      background-color: oklch(from var(--info) l c h / 0.5);
      svg {
        fill: oklch(from var(--info) l c h / 1);
      }
    }
  
    &.warning {
      border-color: oklch(from var(--warning) l c h / 1);
      background-color: oklch(from var(--warning) l c h / 0.5);
      svg {
        fill: oklch(from var(--warning) l c h / 1);
      }
    }
  }

  .input:has(.error) {
    input, select {
      background-color: oklch(from var(--warning) l c h / 0.25);
      border: 1px solid oklch(from var(--warning) l c h / 0.5);
    }
  }

  .path-links {
    svg {
      fill: oklch(from var(--fg) l c h / 0.5)
    }
  }

  .path-link {
    background-color: oklch(from var(--fg) l c h / 0.125);
    &:hover {
      background-color: oklch(from var(--fg) l c h / 0.25);
    }
  }

  table {
    border: 1px solid oklch(from var(--fg) l c h / 0.25);
    td {
      border-bottom: 1px solid oklch(from var(--fg) l c h / 0.25);
    }
    thead {
      background-color: oklch(from var(--fg) l c h / 0.125);
      td {
        border-bottom: 1px solid oklch(from var(--fg) l c h / 0.125);
      }
    }
  }

  .entry-link {
    svg {
      fill: oklch(from var(--fg) l c h / 0.25);
    }
    &:hover {
      background-color: oklch(from var(--fg) l c h / 0.125);
      svg {
        fill: oklch(from var(--fg) l c h / 0.5);
      }
    }
  }

  #preview {
    border: 1px solid oklch(from var(--fg) l c h / 0.25);
    background-color: oklch(from var(--fg) l c h / 0.125);
  }
}


body {
  display: flex;
  flex-direction: column;
}

header {
  padding-top: max(5%, 2rem);
}

main {
  flex-grow: 1;
}

header, main {
  padding-left: 2rem;
  padding-right: 2rem;
}

/* header area */

.header-body {
  padding-bottom: 1.5rem;
  container: header / inline-size;
}

.main-body {
  min-height: 100%;
  padding: 1.5rem 0;
  gap: 1rem;
}

.header-body, .main-body {
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: calc(600px + 10%);
}

.header-userstatus {
  align-self: flex-end; 
}

.header-main {
  display: flex;
  flex-direction: row;
  align-items: end;
  justify-content: space-between;
  gap: 1rem;
  margin-top: 0.5rem;
}

nav {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
}

@container header (width < 600px) {
  .header-main {
    flex-direction: column;
    align-items: center;
    gap: 0.75rem;
  }

  nav {
    justify-content: center;
    width: 100%;
  }

  nav a {
    width: calc(25% - 0.125rem);
  }
}

h1 {
  font-size: 2.5rem;
  line-height: 2rem;
}

a, a[type="button"], button {
  text-decoration: none;
  cursor: pointer;
}

a[type="button"], button {
  border-radius: 5px;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 0.375rem;
  padding: 0.25rem 0.75rem;
  line-height: 1.25rem;
  transition: border-color 0.25s ease, background-color 0.25s ease;
  span {
    margin-top: 1px;
    min-width: max-content;
  }
  svg {
    width: 1.25rem;
    min-width: 1.25rem;
    transition: fill 0.25s ease;
  }
}

a[type="button"], button, input, select {
  font-size: 0.875rem;
}

/* file path */
/* still not perfect on smaller displays. */

.path-row {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
}

.path-links {
  display: flex;
  flex-direction: row;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.125rem;
  div {
    display: flex;
    flex-direction: row;
    align-items: center;
  }
  svg {
    width: 1rem;
  }
}

.path-link {
  padding: 0.25rem 0.75rem;
  border-radius: 5px;
}

/* table */

table {
  width: 100%;
  max-width: 100%;
  border-collapse: separate;
  border-radius: 5px;
  overflow: hidden;
  td {
    &:first-child {
      padding: 0.375rem;
      width: 100%;
    }
    & + td {
      padding: 0 1rem;
      white-space: nowrap;  
    }
  }
  tbody tr:last-of-type td {
    border-bottom: none;
  }
}

.entry-link {
  /* border: 1px solid red; */
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;
  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
  /* https://stackoverflow.com/questions/1236148/html-css-how-to-stop-a-table-cell-from-expanding */

  display: inline-block;
  width: 100%;
  border-radius: 5px;
  svg {
    display: inline-block;
    vertical-align: middle;
    margin-bottom: 2px;
    margin-right: 0.5rem;
    width: 1.25rem;
  }
} 

.entry-link, thead td:first-of-type span {
  padding: 0.25rem 0.5rem;
}

/* form */

form {
  display: flex;
  flex-direction: column;
  align-items: start;
  gap: 1.5rem;
  button {
    align-self: flex-end;
    min-width: 100px;
  }
}

input, select {
  width: 100%;
  appearance: none;
  padding: 0.25rem 0.5rem;
  margin-bottom: 0.25rem;
  border-radius: 5px;
}

.input {
  width: 100%;
  display: grid;
  grid-template-columns: max-content 1fr;
  column-gap: 1rem;
  row-gap: 0.5rem;
  align-items: end;
  input, select {
    grid-column: 1 / 3;
  }
  p {
    text-align: right;
  }
}

/* alerts */

.alert {
  border-radius: 5px;
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  padding: 0.75rem;
  align-items: start;
  svg {
    height: 1.5rem;
    min-width: 1.75rem;
  }
  input {
    margin-top: 0.5rem;
  }
}

/* bottom controls */

.controls {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: end;
  gap: 0.5rem;
  flex-wrap: wrap;
}

/* search result list */

.search-results {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  list-style: none;
  margin: 0;
  padding: 0;
}

.search-result {
  padding: 0.5rem;
  border-radius: 5px;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  a {
    align-self: end;
  }
}

.search-result-details {
  display: flex;
  flex-direction: row;
  gap: 1rem;
  svg {
    height: 3rem;
  }
}

/* file preview area */

#preview {
  border-radius: 5px;
  padding: 1rem;
  img {
    margin: 0 auto;
    width: 100%;
    max-width: 300px;
  }
  textarea {
    appearance: none;
    background: transparent;
    font-family: monospace;
    width: 100%;
    max-height: 500px;
    resize: vertical;
  }
}