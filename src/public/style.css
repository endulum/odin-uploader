:root {
  --bg: rgb(20, 20, 25);
  --fg: rgb(230, 230, 230);
  --success: yellowgreen;
  --info: cadetblue;
  --warning: crimson;
}

body {
  background-color: oklch(from var(--bg) l c h);
  display: flex;
  flex-direction: column;
}

body, a, a[type="button"], button, input, select {
  color: oklch(from var(--fg) l c h)
}

header {
  background-color: oklch(from var(--fg) l c h / 0.125);
  border-bottom: 1px solid oklch(from var(--fg) l c h / 0.25)
}

main {
  flex-grow: 1;
}

header, main {
  display: flex;
  flex-direction: column;
  justify-content: start;
  align-items: center;
  padding: 0 2rem;
}

nav {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
}

.header-body {
  margin-top: 2.5%;
}

.main-body {
  height: 100%;
}

.header-body, .main-body {
  width: 100%;
  max-width: 600px;
  padding: 1rem 0;
}

.header-row {
  display: flex;
  flex-direction: row;
  width: 100%;
  justify-content: space-between;
  align-items: center;
}

h1 {
  font-size: 2.5rem;
}

h2, h3 {
  text-align: center;
}

h3 {
  margin-bottom: 1rem;
}

a, a[type="button"], button {
  text-decoration: none;
  cursor: pointer;
}

.alert, a[type="button"], button {
  border: 1px solid oklch(from var(--fg) l c h / 0.25);
  background-color: oklch(from var(--fg) l c h / 0.125);
  line-height: 1.25rem;
  border-radius: 5px;
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  svg {
    fill: oklch(from var(--fg) l c h / 0.25);
  }
  &.success {
    border-color: oklch(from var(--success) l c h / 0.75);
    background-color: oklch(from var(--success) l c h / 0.25);
    svg {
      fill: oklch(from var(--success) l c h / 0.75);
    }
  }
  &.info {
    border-color: oklch(from var(--info) l c h / 0.75);
    background-color: oklch(from var(--info) l c h / 0.25);
    svg {
      fill: oklch(from var(--info) l c h / 0.75);
    }
  }
  &.warning {
    border-color: oklch(from var(--warning) l c h / 0.75);
    background-color: oklch(from var(--warning) l c h / 0.25);
    svg {
      fill: oklch(from var(--warning) l c h / 0.75);
    }
  }
}

.alert {
  padding: 0.75rem;
  margin-bottom: 1rem;
  align-items: start;
  svg {
    height: 1.5rem;
    min-width: 1.75rem;
  }
}

a[type="button"], button {
  padding: 0.25rem 0.75rem;
  transition: border-color 0.25s ease, background-color 0.25s ease;
  align-items: center;
  justify-content: center;
  span {
    margin-top: 1px;
    min-width: max-content;
  }
  svg {
    width: 1rem;
    transition: fill 0.25s ease;
  }
  &:hover {
    border-color: oklch(from var(--fg) l c h / 0.5);
    background-color: oklch(from var(--fg) l c h / 0.25);
    svg {
      fill: oklch(from var(--fg) l c h / 0.5);
    }
  }
  &.success {
    &:hover {
      border-color: oklch(from var(--success) l c h / 1);
      background-color: oklch(from var(--success) l c h / 0.5);
      svg {
        fill: oklch(from var(--success) l c h / 1);
      }
    }
  }
  &.info {
    &:hover {
      border-color: oklch(from var(--info) l c h / 1);
      background-color: oklch(from var(--info) l c h / 0.5);
      svg {
        fill: oklch(from var(--info) l c h / 1);
      }
    }
  }
  &.warning {
    &:hover {
      border-color: oklch(from var(--warning) l c h / 1);
      background-color: oklch(from var(--warning) l c h / 0.5);
      svg {
        fill: oklch(from var(--warning) l c h / 1);
      }
    }
  }
}

a[type="button"], button, input, select {
  font-size: 0.875rem;
}

form {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: 1.5rem;
  button {
    min-width: 100px;
  }
}

input, select {
  appearance: none;
  background-color: oklch(from var(--fg) l c h / 0.125);
  border: 1px solid oklch(from var(--fg) l c h / 0.25);
  padding: 0.25rem 0.5rem;
  margin-bottom: 0.25rem;
  border-radius: 5px;
}

.input {
  width: 100%;
  display: grid;
  grid-template-columns: max-content 1fr;
  column-gap: 1rem;
  row-gap: 0.5rem;
  align-items: end;
  p {
    text-align: right;
  }
  &:has(.error) {
    input, select {
      background-color: oklch(from var(--warning) l c h / 0.25);
      border: 1px solid oklch(from var(--warning) l c h / 0.5);
    }
  }
}

table {
  width: 100%;
  max-width: 100%;
  border-collapse: separate;
  margin-bottom: 1rem;
  border: 1px solid oklch(from var(--fg) l c h / 0.25);
  border-radius: 5px;
  overflow: hidden;

  td {
    padding: 0.375rem;
    border-bottom: 1px solid oklch(from var(--fg) l c h / 0.25);
    &:first-child {
      width: 100%;
    }
    & + td {
      padding: 0 1rem;
      white-space: nowrap;  
    }
  }

  thead {
    background-color: oklch(from var(--fg) l c h / 0.125);
    td {
      border-bottom: 1px solid oklch(from var(--fg) l c h / 0.125);
    }
  }

  tbody tr:last-of-type td {
    border-bottom: none;
  }
}

.path-row {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
  margin-bottom: 1rem;
}

.path-links {
  display: flex;
  flex-direction: row;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.125rem;
  svg {
    width: 1rem;
    fill: oklch(from var(--fg) l c h / 0.5)
  }
}

.path-link {
  padding: 0.125rem 0.625rem;
  border-radius: 5px;
  background-color: oklch(from var(--fg) l c h / 0.125);
  &:first-of-type {
    margin-left: 0.375rem;
  }
  &:hover {
    background-color: oklch(from var(--fg) l c h / 0.25);
  }
}

.entry-link {
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;
  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
  /* https://stackoverflow.com/questions/1236148/html-css-how-to-stop-a-table-cell-from-expanding */

  display: inline-block;
  width: 100%;
  border-radius: 5px;
  svg {
    display: inline-block;
    vertical-align: middle;
    margin-bottom: 2px;
    margin-right: 0.5rem;
    width: 1rem;
    fill: oklch(from var(--fg) l c h / 0.25);
  }
  &:hover {
    background-color: oklch(from var(--fg) l c h / 0.125);
    svg {
      fill: oklch(from var(--fg) l c h / 0.5);
    }
  }
}

.entry-link, thead td:first-of-type span {
  padding: 0.25rem 0.5rem;
}

.controls {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: end;
  gap: 0.5rem;
  flex-wrap: wrap;
  a {
    min-width: max-content;
  }
}